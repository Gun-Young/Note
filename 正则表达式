正则表达式

一、概念
   
     正则表达式（Regular Expression）是一种文本模式，包括普通字符（例如，a到z之间的字母）和特殊字符。正则表达式使用单个字符串来描述，
匹配一系列某个语法规则的字符串。


二、简介
   
    示例：^[0-9]+abc$
    
    1.^为匹配输入字符串的开始位置
    
    2.[0-9]+匹配多个数字，[0-9]匹配单个数字，+匹配一个或多个
    
    3.abc$匹配字母abc,并以abc为结尾，$为匹配输入字符串的结束位置
    
    
三、语法

    1、runoo+b，可以匹配 runoob、runooob、runoooooob 等，+ 号代表前面的字符必须至少出现一次（1次或多次）。
    
    2、runoo*b，可以匹配 runob、runoob、runoooooob 等，* 号代表前面的字符可以不出现，也可以出现一次或者多次（0次、或1次、或多次）。
    
    3、colou?r 可以匹配 color 或者 colour，? 问号代表前面的字符最多只可以出现一次（0次、或1次）。
    
四、特殊字符

        所谓特殊字符，就是一些有特殊含义的字符，如上面说的 runoo*b 中的 *，简单的说就是表示任何字符串的意思。如果要查找字符串中的 * 符号，
       
    则需要对 * 进行转义，即在其前加一个 \: runo\*ob 匹配 runo*ob许多元字符要求在试图匹配它们时特别对待。若要匹配这些特殊字符，必须首先使 
    
    字符"转义"，即，将反斜杠字符\ 放在它们前面。
    
    1、$:	匹配输入字符串的结尾位置。如果设置了 RegExp 对象的 Multiline 属性，则 $ 也匹配 '\n' 或 '\r'。要匹配 $ 字符本身，请使用 \$。
    
    2、( )：标记一个子表达式的开始和结束位置。子表达式可以获取供以后使用。要匹配这些字符，请使用 \( 和 \)。
    
    3、*：	匹配前面的子表达式零次或多次。要匹配 * 字符，请使用 \*。
    
    4、+：匹配前面的子表达式一次或多次。要匹配 + 字符，请使用 \+。
    
    5、.：匹配除换行符 \n 之外的任何单字符。要匹配 . ，请使用 \. 。
    
    6、[ ：标记一个中括号表达式的开始。要匹配 [，请使用 \[。
    
    7、? ：	匹配前面的子表达式零次或一次，或指明一个非贪婪限定符。要匹配 ? 字符，请使用 \?。
    
    8、\ ：	将下一个字符标记为或特殊字符、或原义字符、或向后引用、或八进制转义符。例如， 'n' 匹配字符 'n'。
    
            '\n' 匹配换行符。序列 '\\' 匹配 "\"，而 '\(' 则匹配 "("。
            
    9、^ ：匹配输入字符串的开始位置，除非在方括号表达式中使用，此时它表示不接受该字符集合。要匹配 ^ 字符本身，请使用 \^。
    
    10、{ ：标记限定符表达式的开始。要匹配 {，请使用 \{。
    
    11、| ：	指明两项之间的一个选择。要匹配 |，请使用 \|。
    
    
五、限定符

    限定符用来指定正则表达式的一个给定组件必须要出现多少次才能满足匹配。有 * 或 + 或 ? 或 {n} 或 {n,} 或 {n,m} 共6种。
    
    1、* ：	匹配前面的子表达式零次或多次。例如，zo* 能匹配 "z" 以及 "zoo"。* 等价于{0,}。
    
    2、+ ：	匹配前面的子表达式一次或多次。例如，'zo+' 能匹配 "zo" 以及 "zoo"，但不能匹配 "z"。+ 等价于 {1,}。
    
    3、? ： 匹配前面的子表达式零次或一次。例如，"do(es)?" 可以匹配 "do" 或 "does" 中的"do" 。? 等价于 {0,1}。
    
    4、{n} : n 是一个非负整数。匹配确定的 n 次。例如，'o{2}' 不能匹配 "Bob" 中的 'o'，但是能匹配 "food" 中的两个 o。
    
    5、{n,} ：n 是一个非负整数。至少匹配n 次。例如，'o{2,}' 不能匹配 "Bob" 中的 'o'，但能匹配 "foooood" 中的所有 o。
    
             'o{1,}' 等价于 'o+'。'o{0,}' 则等价于 'o*'。
             
    6、{n,m} ：	m 和 n 均为非负整数，其中n <= m。最少匹配 n 次且最多匹配 m 次。例如，"o{1,3}" 将匹配 "fooooood" 中的前三个 o。
    
                'o{0,1}' 等价于 'o?'。请注意在逗号和两个数之间不能有空格。
                
           
六、定位符

       定位符使您能够将正则表达式固定到行首或行尾。它们还使您能够创建这样的正则表达式，这些正则表达式出现在一个单词内、
       
   在一个单词的开头或者一个单词的结尾。
   
   1、^ ：匹配输入字符串开始的位置。如果设置了 RegExp 对象的 Multiline 属性，^ 还会与 \n 或 \r 之后的位置匹配。
   
   2、$ : 匹配输入字符串结尾的位置。如果设置了 RegExp 对象的 Multiline 属性，$ 还会与 \n 或 \r 之前的位置匹配。
   
   3、\b 、	匹配一个字边界，即字与空格间的位置。
   
   4、 \B 、 非字边界匹配。
   
   注意：不能将限定符与定位符一起使用。由于在紧靠换行或者字边界的前面或后面不能有一个以上位置，因此不允许诸如 ^* 之类的表达式。
   
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
