1.地址/端口/用户名/密码配置
spring.rabbitmq.host=192.168.1.204
spring.rabbitmq.prot=5672
spring.rabbitmq.username=keking
spring.rabbitmq.password=kk1234



2.创建模板，连接，队列
@Configuration
public class RabbitmqConfig {

    @Value("${spring.rabbitmq.host:}")
    private String host;

    @Value("${spring.rabbitmq.port:}")
    private String port;

    @Value("${spring.rabbitmq.username:}")
    private String username;

    @Value("${spring.rabbitmq.password:}")
    private String password;

    private static String vhost = "/pay/lm";

   //定义队列
    @Bean
    public Queue queue(){
        return new Queue("testheihei");
    }

    //连接
    @Bean
    public ConnectionFactory connectionFactory(){
        CachingConnectionFactory factory = new CachingConnectionFactory();
        factory.setAddresses(host+":"+port);
        factory.setVirtualHost(vhost);
        factory.setUsername(username);
        factory.setPassword(password);
        return factory;
    }

    //操作模板
    @Bean
    public RabbitTemplate rabbitTemplate(ConnectionFactory connectionFactory){
        return new RabbitTemplate(connectionFactory);
    }

}



3.生产者
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.amqp.rabbit.core.RabbitTemplate;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import java.util.Date;

@Component
public class MsgProducer{
    private final Logger logger = LoggerFactory.getLogger(this.getClass());
    @Autowired
    private RabbitTemplate rabbitTemplate;
    public void send(){
        String message = "hello"+new Date();
        System.out.println("发送的消息："+message);
        this.rabbitTemplate.convertAndSend("testheihei",message);
    }

}




4.消费者
import org.springframework.amqp.rabbit.annotation.RabbitHandler;
import org.springframework.amqp.rabbit.annotation.RabbitListener;
import org.springframework.stereotype.Component;

@Component
@RabbitListener(queues = "testheihei")
public class MsgReceiver {

    @RabbitHandler
    public void process(String msg) throws Exception{
        Thread.sleep(10000);
        System.out.println("接收到的消息："+msg);
    }
}




